<?php
namespace [NAMESPACE]\Http\Controllers;

use App\Core\Base\Controllers\BaseController;
use [NAMESPACE]\Models\[MODULE_NAME];
use [NAMESPACE]\Http\Process\[MODULE_NAME]\[MODULE_NAME]CrudProcess;
use [NAMESPACE]\Http\Process\[MODULE_NAME]\[MODULE_NAME]DeleteProcess;

class [MODULE_NAME]Controller extends BaseController
{
    public function index()
    {
        $title = "[PROPER_MODULE_NAME] Data";
        $selected_menu = '[LOWERCASE_MODULE_NAME]';
        return view('[LOWERCASE_MODULE_NAME]::index', compact(
            'title',
            'selected_menu'
        ));
    }

    public function create()
    {
        $title = "Add New [PROPER_MODULE_NAME]";
        $data = new [MODULE_NAME];
        $breadcrumb = [
            [
                'label' => '[PROPER_MODULE_NAME]',
                'url' => route('admin.[LOWERCASE_MODULE_NAME].index'),
            ],
        ];

        return view('[LOWERCASE_MODULE_NAME]::crud', compact(
            'title',
            'data',
            'breadcrumb'
        ));
    }

    public function store()
    {
        return (new [MODULE_NAME]CrudProcess(new [MODULE_NAME]))
            ->setSuccessRedirectTarget(route('admin.[LOWERCASE_MODULE_NAME].index'))
            ->type($this->request->ajax() ? 'ajax' : 'http')
            ->handle();
    }

    public function edit($id)
    {
        $title = "Edit [PROPER_MODULE_NAME] Data";
        $data = [MODULE_NAME]::findOrFail($id);
        $breadcrumb = [
            [
                'label' => '[PROPER_MODULE_NAME]',
                'url' => route('admin.[LOWERCASE_MODULE_NAME].index'),
            ],
        ];

        return view('[LOWERCASE_MODULE_NAME]::crud', compact(
            'title',
            'data',
            'breadcrumb'
        ));
    }

    public function update($id)
    {
        $data = [MODULE_NAME]::findOrFail($id);
        return (new [MODULE_NAME]CrudProcess($data))
            ->setSuccessRedirectTarget(route('admin.[LOWERCASE_MODULE_NAME].index'))
            ->type($this->request->ajax() ? 'ajax' : 'http')
            ->handle();
    }

    public function delete($id=null)
    {
        return (new [MODULE_NAME]DeleteProcess($id))
            ->type('ajax')
            ->handle();
    }
}